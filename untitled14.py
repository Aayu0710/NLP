# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zb8g3fZ0bWTfXUl6D9mdQdR7ISPcm1lV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data = pd.read_csv('/content/IMD_daa.csv')

data.head()

data.value_counts()

data.isnull()

pip install streamlit

pip install transformers

# Import necessary libraries
from transformers import T5Tokenizer, T5ForConditionalGeneration

pip install transformers sentencepiece

!pip install --upgrade transformers

apt-get install -y libomp-dev

from transformers import T5Tokenizer, T5ForConditionalGeneration

tokenizer = T5Tokenizer.from_pretrained('t5-base')
model = T5ForConditionalGeneration.from_pretrained('t5-base')

pip install sumy

from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lex_rank import LexRankSummarizer

# Initialize the summarizer
summarizer = LexRankSummarizer()

# Function to generate summaries
def summarize_comments(comment):
    # Initialize parser and tokenizer
    parser = PlaintextParser.from_string(comment, Tokenizer("english"))

    # Generate the summary
    sentences = summarizer(parser.document, sentences_count=1)
    summary = ' '.join(str(sentence) for sentence in sentences)

    return summary

import nltk
nltk.download('punkt')

# Iterate over the comments and generate summaries
summaries = []
for comment in data['review']:
    summary = summarize_comments(comment)
    summaries.append(summary)

# Add the summaries to the DataFrame
data['summary'] = summaries

# Save the results to a new CSV file
data.to_csv('summarized_comments.csv', index=False)

data.head()

data['summary']

pip install translate

from translate import Translator

# Translation function
def translate_comment(comment, target_language):
    translator = Translator(to_lang=target_language)
    translation = translator.translate(comment)
    return translation

# Target language for translation
target_language = 'fr'

# Iterate over the comments and perform translation
translations = []
for comment in data['review'][0]:
    translation = translate_comment(comment, target_language)
    translations.append(translation)

# Add the translations to the DataFrame
data['translation'] = translations

data.head()

